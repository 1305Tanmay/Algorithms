
                  //CODE FOR FINDING THE TOTAL NO. OF OCCURENCES OF ANY NO. IN SORTED ARRAY USING BINARY SEARCH


#include <iostream>
using namespace std;

  //FUNTION FOR FINDING THE FIRST MOST OCCURANCE OF A NUMBER
  int first_occurence(int arr[],int n,int key)
  {
     int start=0,end=n-1,mid,first_index;
     mid=start + (end-start)/2;
    
    
    while(start<=end)
    {
        if(arr[mid]==key)
        {
            first_index=mid;
            end=mid-1 ;
        }
        if(arr[mid]<key)
        {
            start=mid+1;
        }
        
        else if(arr[mid]>key)
        {
            end=mid-1;
        }
        
        mid=start + (end-start)/2;
        
    }
    
    return first_index;
     
     
  }
  
  
  //FUNTION FOR FINDING THE LAST MOST OCCURANCE OF A NUMBER
  int last_occurence(int arr[],int n,int key)
  {
     int start=0,end=n-1,mid,last_index;
     mid=start + (end-start)/2;
    
    
    while(start<=end)
    {
        if(arr[mid]==key)
        {
            last_index=mid;
            start=mid+1 ;
        }
        if(arr[mid]<key)
        {
            start=mid+1;
        }
        
        else if(arr[mid]>key)
        {
            end=mid-1;
        }
        
        mid=start + (end-start)/2;
        
    }
    
    return last_index;
     
     
  }
  

int main() {
    int n;
    	cout<<"ENTER THE LENGTH OF THE ARRAY"<<endl;
    	cin>>n;
    
	int arr[n],key,first_index,last_index;
	

	cout<<"ENTER THE ELEMENTS OF SORTED ARRAY"<<endl;
	for(int i=0;i<n;i++)
	{
	    cin>>arr[i];
	}
	
	cout<<"ENTER THE ELEMENT/KEY WHOSE OCCURANCE YOU WANT TO FIND"<<endl;
	cin>>key;
	
	first_index=first_occurence(arr,n,key);   //CALLING OF first_occurence FUNCTION
	
    last_index=last_occurence(arr,n,key);     //CALLING OF last_occurence FUNCTION
    
    cout<<"NO. OF OCCURENCE OF "<<key<<" IS EQUALS TO "<<(last_index-first_index)+1<<endl;
	return 0;
}
 

 
